<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.hyf.entryexit.dao.AdminDAO">
	<!-- 查询所有网点信息、业务信息 -->
    <!-- 通过网点id查询出网点信息、可办理业务（service,department_service关连表） -->
	<select id="findAllDepartmentAndService" resultMap="departmentMap" >
	   select * from department 
	</select>
	<select id="findServiceByDepartmentId" resultType="com.hyf.entryexit.entity.Service" parameterType="java.lang.Integer">
	    select * from service where service_id in ( 
	    	select service_id from department_service where department_id=#{departmentId}
	    )
	</select>
	<resultMap id="departmentMap" type="com.hyf.entryexit.entity.Department" >
	    <id property="department_id" column="department_id"/>
	    <result property="department_name" column="department_name"/>
	    <result property="department_address" column="department_address"/>
	    <collection property="services" javaType="java.util.ArrayList" 
	        ofType="com.hyf.entryexit.entity.Service" column="department_id" 
	        select="findServiceByDepartmentId">
	    </collection>
	</resultMap>
	<!-- 查询出所有的业务信息 -->
	<select id="findAllService" resultType="com.hyf.entryexit.entity.Service">
	    select * from service
	</select>
	<!-- 增加网点记录,还要增加网点和业务关系表
		useGeneratedKeys="true" keyProperty="department_id"，其中department_id代表插入的Department对象的主键属性。
	 -->
	<insert id="saveDepartment" parameterType="com.hyf.entryexit.entity.Department" 
	    useGeneratedKeys="true" keyProperty="department_id">
	    insert into department(department_name,department_address) 
	    	values(#{department_name,jdbcType=VARCHAR},
	    		   #{department_address,jdbcType=VARCHAR})
	</insert>
	<!-- 增加网点记录,还要增加网点和业务关系表 -->
	<insert id="saveDepartmentService" parameterType="java.util.HashMap">
	    insert into department_service(department_id,service_id) 
	    	values(#{departmentId,jdbcType=NUMERIC},
	    		   #{serviceId,jdbcType=NUMERIC})
	</insert>
	<!-- 难过业务员关联的网点id去查询所有预约、询业务、网点信息 -->
    <!-- 通过网点id查询出网点信息、可办理业务（service,department_service关连表）、排队情况（prebook表里的department_id） -->
	<select id="findDepartmentById" resultMap="departmentMap" parameterType="java.lang.Integer">
	    select * from department where department_id=#{departmentId}
	</select>
	<!-- 更新网点信息-->
	<update id="updateDepartmentById" parameterType="com.hyf.entryexit.entity.Department">
	    update department set 
	    		department_name=#{department_name,jdbcType=VARCHAR},
	    		department_address=#{department_address,jdbcType=VARCHAR} 
	    	where department_id=#{department_id,jdbcType=NUMERIC}
	</update>
	<!-- 删除网点的业务关系表  -->
	<delete id="deleteDepartmentServiceByDepartmentIdAndServiceId" parameterType="java.util.HashMap">
	    delete from department_service 
	    	where department_id=#{departmentId,jdbcType=NUMERIC} 
	    	and service_id=#{serviceId,jdbcType=NUMERIC}
	</delete>
	<!-- 删除网点记录  -->
	<delete id="deleteDepartmentById" parameterType="java.lang.Integer">
	    delete from department where department_id=#{departmentId}
	</delete>
	<!-- 删除网点对应的业务关系记录  -->
	<delete id="deleteDepartmentServiceByDepartmentId" parameterType="java.lang.Integer">
	    delete from department_service where department_id=#{departmentId}
	</delete>
	<!-- 查询所有的受理网点  -->
	<select id="findDepartmentAll" resultType="com.hyf.entryexit.entity.Department">
	    select * from department
	</select>
	<!-- 增加业务记录 -->
	<insert id="saveService" parameterType="com.hyf.entryexit.entity.Service">
	    insert into service(service_name) values(#{service_name,jdbcType=VARCHAR})
	</insert>
	<!-- 更新业务信息-->
	<update id="updateService" parameterType="com.hyf.entryexit.entity.Service">
	    update service set service_name=#{service_name,jdbcType=VARCHAR} 
	    	where service_id=#{service_id,jdbcType=NUMERIC}
	</update>
	<!-- 删除业务记录 -->
	<delete id="deleteService" parameterType="java.lang.Integer">
	    delete from service where service_id=#{serviceId}
	</delete>
	<!-- 删除网点对应的业务关系记录  -->
	<delete id="deleteDepartmentServiceByServiceId" parameterType="java.lang.Integer">
	    delete from department_service where service_id=#{serviceId}
	</delete>
	<!-- 查询所有业务员信息 -->
	<select id="findAllClerk" resultMap="clerkMap">
	    select * from clerk c,department d where c.department_id=d.department_id
	</select>
	<resultMap type="com.hyf.entryexit.entity.Clerk" id="clerkMap">
	    <id property="clerk_id" column="clerk_id"/>
	    <result property="clerk_username" column="clerk_username"/>
	    <result property="clerk_password" column="clerk_password"/>
	    <result property="department_id" column="department_id"/>
	    <association property="department" column="department_id" 
	        javaType="com.hyf.entryexit.entity.Department"  >
	        <id property="department_id" column="department_id"/>
	        <result property="department_name" column="department_name"/>
	        <result property="department_address" column="department_address"/>
	    </association > 
	</resultMap>
	<!-- 增加业务员记录 -->
	<insert id="saveClerk" parameterType="com.hyf.entryexit.entity.Clerk">
	    insert into clerk(clerk_username,clerk_password,department_id) 
	    	values(#{clerk_username,jdbcType=VARCHAR},
	    		   #{clerk_password,jdbcType=VARCHAR},
	    		   #{department_id,jdbcType=NUMERIC})
	</insert>
	<!-- 通过id查询出业务员信息 -->
	<select id="findClerkById" resultMap="clerkMap" >
	    select * from clerk c,department d where c.department_id=d.department_id and c.clerk_id=#{clerkId}
	</select>
	<!-- 更新业务员信息-->
	<update id="updateClerk" parameterType="com.hyf.entryexit.entity.Clerk">
	    update clerk set clerk_username=#{clerk_username,jdbcType=VARCHAR},
	    				 clerk_password=#{clerk_password,jdbcType=VARCHAR},
	    				 department_id=#{department_id,jdbcType=NUMERIC} 
	    		where clerk_id=#{clerk_id,jdbcType=NUMERIC}
	</update>
	<!-- 删除业务员记录 -->
	<delete id="deleteClerk" parameterType="java.lang.Integer">
	    delete from clerk where clerk_id=#{clerkId}
	</delete>	
	
	
</mapper>







