<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!-- 每个实例和实体的访问接口对应一个映射(mapper)文件  namespace 的值是实体访问dao接口的类名, 不能错呀! -->
<mapper namespace="com.hyf.entryexit.dao.CustomerDAO">
<!-- 在Department.xml 中添加 每个Mapper方法的SQL语句  add 对应DepartmentDAOr 接口中的方法名 add -->
<!-- paramaterType 对应add方法的参数类型  sql 语句中#{deptno}对于参数Department 对象的Bean 属性(也就是getDeptno()方法的值) -->
	
	<!-- 查询所有的受理网点  -->
	<select id="findDepartmentAll" resultType="com.hyf.entryexit.entity.Department">
	    select * from department
	</select>
	<!-- 通过网点id查询出网点信息、可办理业务（service,department_service关连表）、排队情况（prebook表里的department_id） -->
	<select id="findDepartmentById" resultMap="departmentMap" parameterType="java.lang.Integer">
	    select * from department where department_id=#{departmentId}
	</select>
	<select id="findServiceByDepartmentId" resultType="com.hyf.entryexit.entity.Service" parameterType="java.lang.Integer">
	    select * from service where service_id in ( 
	    	select service_id from department_service where department_id=#{departmentId}
	    )
	</select>
	<select id="findqueuingNumByPrebook" resultType="java.lang.Integer" parameterType="java.lang.Integer">
	    select count(p.prebook_id) as queuingNum from prebook p where p.department_id=#{departmentId} and p.status='0'
	</select>
	<resultMap id="departmentMap" type="com.hyf.entryexit.entity.Department" >
	    <id property="department_id" column="department_id"/>
	    <result property="department_name" column="department_name"/>
	    <result property="department_address" column="department_address"/>
	    <collection property="services" javaType="java.util.ArrayList" 
	        ofType="com.hyf.entryexit.entity.Service" column="department_id" 
	        select="findServiceByDepartmentId">
	    </collection>
	    <collection property="queuingNum" javaType="java.lang.Integer" column="department_id"
	        select="findqueuingNumByPrebook">
	    </collection>
	</resultMap>
	<!-- 增加prebook预约记录 -->
	<insert id="savePrebook" parameterType="com.hyf.entryexit.entity.Prebook" >
		insert into prebook(
			passport_id,phone,department_id,service_id,appointment_date,appointment_time,status,verification) 
		    	values(#{passport_id,jdbcType=VARCHAR},
		    			#{phone,jdbcType=VARCHAR},
		    			#{department_id,jdbcType=NUMERIC},
		    			#{service_id,jdbcType=NUMERIC},
		    			#{appointment_date,jdbcType=VARCHAR},
		    			#{appointment_time,jdbcType=VARCHAR},
		    			#{status,jdbcType=VARCHAR},
		    			#{verification,jdbcType=VARCHAR}
		    			)	    
	</insert>
	<!-- 通过身份证和提取密码查询预约信息 -->
	<select id="findPrebookByPassportIdAndVerification" resultType="com.hyf.entryexit.entity.Prebook" 
	    parameterType="java.util.HashMap">
	    select p.*,d.department_name,s.service_name from prebook p,department d,service s 
	    	  where p.department_id=d.department_id 
	    		and p.service_id=s.service_id 
	    		and p.passport_id=#{passportId} 
	    		and p.verification=#{verification}
	</select>
	
</mapper>







